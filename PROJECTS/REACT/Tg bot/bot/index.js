// rank + new lvl stats

// initialization
const TelegramBot = require("node-telegram-bot-api");
const token = "6366307757:AAEkZ_W2arbuJzSzS_kRXfHFgvsDXFSTYGE";
const bot = new TelegramBot(token, {
  // polling: { interval: 300, autoStart: false, params: { timeout: 10 } },
  polling: true,
});

// TG bot
bot.on("message", async (msg) => {
  const userId = msg.from.username;
  const chatId = msg.chat.id;
  const messageId = msg.message_id;
  const text = msg.text;
  const html = `
  <strong>–ü—Ä–∏–≤–µ—Ç–∏–∫–∏ –∏ –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, 
  ${msg.from.first_name} üî•</strong>
–ú–µ–Ω—è –∑–æ–≤—É—Ç <i>–õ—é—Ü–∏</i> –∏ —è —Ç–≤–æ–π <tg-spoiler>–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç</tg-spoiler>
  –¢—É—Ç –≤—Å—ë –ø—Ä–æ—Å—Ç–æ –∫–∞–∫ –≤–∞—Ä–∏—Ç—å –ª—é–¥–∏—à–µ–∫ –≤ –∫–æ—Ç–ª–µ! –ú–æ–∂–Ω–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä, —Ä–µ–π—Ç–∏–Ω–≥ –≥–ª—è–Ω—É—Ç—å, <s>–∫–æ—Å—Ç–∏ –¥—Ä—É–≥-–¥—Ä—É–≥—É –ø–µ—Ä–µ–º—ã—Ç—å</s> –æ—Ü–µ–Ω–∏—Ç—å –∫—Ç–æ –∏–∑ –¥—Ä—É–∑–µ–π –∑–∞–±—Ä–∞–ª—Å—è –≤—ã—à–µ
  –ù–æ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Å–æ–≤–µ—Ç—É—é –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–≤–æ–π LVL - —Ç–∞–º –≥–æ—Ä–¥–æ—Å—Ç—å —Å–æ–∑–¥–∞—Ç–µ–ª—è ^^
  –ò —É <i>–ú—è–≤–∫–∏</i> –∫–æ—Å—Ç–∏ –±—Ä–æ—Å—å, –º–æ–∂–µ—Ç —Ö–æ—Ç—å –Ω–∞ —Å–µ–π —Ä–∞–∑ –ø–æ–≤–µ–∑—ë—Ç..
  `;

  // database
  // users pts
  const pts = {
    max: 58,
    tema: 41,
    fedya: 60,
    barca: 0,
    jane: 0,
    nina: 0,
    sveta: 0,
    pasha: 0,
    gleb: 0,
    polly: 0
  };

  // main list of users
  function userList(name) {
    return `
  ${pts.fedya} - ${userId === "Amblig" ? name : "–§–µ–¥—è"}
${pts.max} - ${userId === "ecstvzz" ? name : "–ú–∞–∫—Å–∏–º"}
${pts.tema} - ${userId === "temasafonov" ? name : "–¢—ë–º–∞"}
  `;
  }

  // focus on user
  function userFocus() {
    if (userId === "ecstvzz") {
      return userList("<strong>–ú–ê–ö–°–ò–ú</strong>");
    } else if (userId === "temasafonov") {
      return userList("<strong>–¢–Å–ú–ê</strong>");
    } else if (userId === "Amblig") {
      return userList("<strong>–§–ï–î–Ø</strong>");
    }
  }

  const list = userFocus();

  // "üî•"

  // commands
  if (text === "/start") {
    // clear command
    await bot.deleteMessage(chatId, messageId);

    // Luci sticker
    await bot.sendSticker(
      chatId,
      "CAACAgIAAxkBAAEL1eBmDINRenGNOxRjC0X7XkW6u6iJZgAC9AADIjeOBDqJ2Xzsyg0kNAQ"
    );

    // welcome message + menu buttons
    await bot.sendMessage(chatId, html, {
      parse_mode: "HTML",
      reply_markup: {
        keyboard: [
          ["üí∏ Payment", "üíØ Rank"],
          ["‚úåÔ∏è Vote", "üå¶ Weather"],
          ["üé∞‡∏Ö·®ê·µâ·µí ∑"],
        ],
        resize_keyboard: true,
      },
    });
  } else if (text === "üí∏ Payment") {
    // sending payment
    await bot.sendInvoice(
      chatId,
      "–û–ø–ª–∞—Ç–∞ –≤–æ–ª–ª–µ–π–±–æ–ª–∞",
      "üí≥ ‚û† üîê ‚û† üèê",
      "payload",
      "381764678:TEST:82325",
      "RUB",
      [
        {
          label: "volleyball",
          amount: 700 * 100,
        },
      ],
      { protect_content: true }
    );
  } else if (text === "üíØ Rank") {
    // clear command
    await bot.deleteMessage(chatId, messageId);

    // table ranks
    await bot.sendMessage(chatId, list, {
      parse_mode: "HTML",
    });
  } else if (text === "üé∞‡∏Ö·®ê·µâ·µí ∑") {
    // clear command
    await bot.deleteMessage(chatId, messageId);

    // Gambling
    await bot.sendDice(chatId, { emoji: "üé≤" });
  }
});
